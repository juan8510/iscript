<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lezo.iscript.service.crawler.dao.MessageDao">
	<resultMap type="MessageDto" id="RM_MessageDto">
		<result column="ID" property="id"/>
		<result column="NAME" property="name"/>
		<result column="MESSAGE" property="message"/>
		<result column="SOURCE" property="source"/>
		<result column="REMARK" property="remark"/>
		<result column="STATUS" property="status"/>
		<result column="SORT_CODE" property="sortCode"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="UPDATE_TIME" property="updateTime"/>
		<result column="DATA_BUCKET" property="dataBucket"/>
		<result column="DATA_DOMAIN" property="dataDomain"/>
		<result column="DATA_COUNT" property="dataCount"/>
	</resultMap>
	<sql id="MessageDto-coloumn-list">
		NAME
		,MESSAGE
		,SOURCE
		,REMARK
		,STATUS
		,SORT_CODE
		,CREATE_TIME
		,UPDATE_TIME
		,DATA_BUCKET
		,DATA_DOMAIN
		,DATA_COUNT
	</sql>
	<insert id="batchInsert" parameterType="MessageDto">
		INSERT INTO T_MESSAGE(
		<include refid="MessageDto-coloumn-list" />
		)
		VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.name},#{item.message},#{item.source},#{item.remark},#{item.status},#{item.sortCode},#{item.createTime},#{item.updateTime},#{item.dataBucket},#{item.dataDomain},#{item.dataCount})
		</foreach>
	</insert>
	<update id="batchUpdate" parameterType="MessageDto">
		UPDATE T_MESSAGE SET
		NAME=#{name},
		MESSAGE=#{message},
		SOURCE=#{source},
		REMARK=#{remark},
		STATUS=#{status},
		SORT_CODE=#{sortCode},
		DATA_BUCKET=#{dataBucket},
		DATA_DOMAIN=#{dataDomain},
		DATA_COUNT=#{dataCount}
		WHERE ID=#{id}
	</update>
	<update id="batchUpdateStatus" parameterType="map">
		UPDATE T_MESSAGE SET
		REMARK=#{remark},
		STATUS=#{status}
		WHERE 1=1
		<foreach collection="idList" item="id" open="AND ID IN("
			close=")" separator=",">
			#{id}
		</foreach>
	</update>
	<update id="updateStatusByCreateTime" parameterType="map">
		UPDATE T_MESSAGE SET
		STATUS=#{toStatus}
		<where>
			<foreach collection="nameList" item="name" open="AND NAME IN("
				close=")" separator=",">
				#{name}
			</foreach>
			<if test="bucket==null">
			 AND DATA_BUCKET IS NULL
			</if>
			<if test="bucket!=null">
			 AND DATA_BUCKET=#{bucket}
			</if>
			<if test="domain==null">
			 AND DATA_DOMAIN IS NULL
			</if>
			<if test="domain!=null">
			 AND DATA_DOMAIN=#{domain}
			</if>
			AND STATUS=#{fromStatus}
			<![CDATA[
			AND CREATE_TIME<=#{beforCreateTime}
			]]>
		</where>
	</update>
	<select id="getMessageDtos" parameterType="map" resultMap="RM_MessageDto">
		SELECT ID,
		<include refid="MessageDto-coloumn-list" />
		FROM T_MESSAGE
		WHERE 1=1
		<if test="nameList==null || nameList.isEmpty()">
			AND 1=0
		</if>
		<if test="nameList !=null &amp;&amp; !nameList.isEmpty()">
			<foreach collection="nameList" item="name" open="AND NAME IN("
				separator="," close=")">
				#{name}
			</foreach>
		</if>
		<if test="status != null">
			AND STATUS=#{status}
		</if>
		LIMIT #{limit}
	</select>
	
	<select id="getMessageDtoByIdList" parameterType="map" resultMap="RM_MessageDto">
		SELECT ID,
		<include refid="MessageDto-coloumn-list" />
		FROM T_MESSAGE
		<where>
			<foreach collection="idList" item="id" open="ID IN("
				separator="," close=")">
				#{id}
			</foreach>
		</where>
	</select>
	
	<select id="getEarlyMessageByNameList" parameterType="map" resultMap="RM_MessageDto">
		SELECT MIN(ID) AS ID,NAME,DATA_DOMAIN,DATA_BUCKET FROM T_MESSAGE
		<where>
			<foreach collection="nameList" item="name" open="NAME IN("
				separator="," close=")">
				#{name}
			</foreach>
			<if test="status != null">
				AND STATUS=#{status}
			</if>
			GROUP BY NAME,DATA_DOMAIN,DATA_BUCKET
		</where>
	</select>
</mapper>