<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lezo.iscript.service.crawler.dao.ProductStandardDao">
	<resultMap type="ProductStandardDto" id="RM_ProductStandardDto">
		<result column="ID" property="id"/>
		<result column="WARE_CODE" property="wareCode"/>
		<result column="SIMILAR_CODE" property="similarCode"/>
		<result column="SITE_ID" property="siteId"/>
		<result column="SHOP_ID" property="shopId"/>
		<result column="PRODUCT_CODE" property="productCode"/>
		<result column="PRODUCT_NAME" property="productName"/>
		<result column="PRODUCT_URL" property="productUrl"/>
		<result column="BAR_CODE" property="barCode"/>
		<result column="IMG_URL" property="imgUrl"/>
		<result column="TOKEN_BRAND" property="tokenBrand"/>
		<result column="TOKEN_GATEGORY" property="tokenGategory"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="UPDATE_TIME" property="updateTime"/>
	</resultMap>
	<sql id="ProductStandardDto-coloumn-list">
		WARE_CODE
		,SIMILAR_CODE
		,SITE_ID
		,SHOP_ID
		,PRODUCT_CODE
		,PRODUCT_NAME
		,PRODUCT_URL
		,BAR_CODE
		,IMG_URL
		,TOKEN_BRAND
		,TOKEN_GATEGORY
		,CREATE_TIME
		,UPDATE_TIME
	</sql>
	<insert id="batchInsert" parameterType="ProductStandardDto">
		INSERT INTO T_PRODUCT_STANDARD(
		<include refid="ProductStandardDto-coloumn-list" />
		)
		VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.wareCode},#{item.similarCode},#{item.siteId},#{item.shopId},#{item.productCode},#{item.productName},#{item.productUrl},#{item.barCode},#{item.imgUrl},#{item.tokenBrand},#{item.tokenGategory},#{item.createTime},#{item.updateTime})
		</foreach>
	</insert>
	<update id="batchUpdate" parameterType="ProductStandardDto">
		UPDATE T_PRODUCT_STANDARD SET
		WARE_CODE=#{wareCode}
		,SIMILAR_CODE=#{similarCode}
		,SITE_ID=#{siteId}
		,SHOP_ID=#{shopId}
		,PRODUCT_CODE=#{productCode}
		,PRODUCT_NAME=#{productName}
		,PRODUCT_URL=#{productUrl}
		,BAR_CODE=#{barCode}
		,IMG_URL=#{imgUrl}
		,TOKEN_BRAND=#{tokenBrand}
		,TOKEN_GATEGORY=#{tokenGategory}
		,CREATE_TIME=#{createTime}
		,UPDATE_TIME=#{updateTime}
		WHERE ID=#{id}
	</update>
	
	<select id="getDtoBySimilarCodes" parameterType="map" resultMap="RM_ProductStandardDto">
	   SELECT * FROM T_PRODUCT_STANDARD
	   <where>
	      <foreach collection="similarCodeList" item="sCode" open="SIMILAR_CODE IN(" separator="," close=")">
	         #{sCode}
	      </foreach>
	    </where>
	</select>
	<select id="getDtoByProductCodes" parameterType="map" resultMap="RM_ProductStandardDto">
	    SELECT * FROM T_PRODUCT_STANDARD
	    <where>
	      SITE_ID=#{siteId}
	      <foreach collection="codeList" item="pCode" open="AND PRODUCT_CODE IN(" separator="," close=")">
	         #{pCode}
	      </foreach>
	    </where>
	</select>
	<select id="geDtoByCategorysAndBrands" parameterType="map" resultMap="RM_ProductStandardDto">
	    SELECT * FROM T_PRODUCT_STANDARD
	    <where>
	      <if test="categorys!=null and !categorys.isEmpty()">
		      <foreach collection="categorys" item="cate" open="AND TOKEN_GATEGORY IN(" separator="," close=")">
		         #{cate}
		      </foreach>
	      </if>
	      <if test="brands!=null and !brands.isEmpty()">
		      <foreach collection="brands" item="brand" open="AND TOKEN_BRAND IN(" separator="," close=")">
		         #{brand}
		      </foreach>
	      </if>
	    </where>
	</select>
</mapper>