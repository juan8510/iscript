<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lezo.iscript.service.crawler.dao.ProductDao">
	<resultMap type="ProductDto" id="RM_ProductDto">
		<result column="ID" property="id" />
		<result column="SITE_ID" property="siteId" />
		<result column="SHOP_ID" property="shopId" />
		<result column="PRODUCT_CODE" property="productCode" />
		<result column="PRODUCT_NAME" property="productName" />
		<result column="MARKET_PRICE" property="marketPrice" />
		<result column="PRODUCT_URL" property="productUrl" />
		<result column="PRODUCT_BRAND" property="productBrand" />
		<result column="PRODUCT_MODEL" property="productModel" />
		<result column="PRODUCT_ATTR" property="productAttr" />
		<result column="BAR_CODE" property="barCode" />
		<result column="IMG_URL" property="imgUrl" />
		<result column="UNION_URL" property="unionUrl" />
		<result column="ONSAIL_TIME" property="onsailTime" />
		<result column="CREATE_TIME" property="createTime" />
		<result column="UPDATE_TIME" property="updateTime" />
		<result column="CATEGORY_NAV" property="categoryNav" />
		<result column="TOKEN_BRAND" property="tokenBrand" />
		<result column="TOKEN_CATEGORY" property="tokenCategory" />
	</resultMap>
	<sql id="ProductDto-coloumn-list">
		SITE_ID
		,SHOP_ID
		,PRODUCT_CODE
		,PRODUCT_NAME
		,MARKET_PRICE
		,PRODUCT_URL
		,PRODUCT_BRAND
		,PRODUCT_MODEL
		,PRODUCT_ATTR
		,BAR_CODE
		,IMG_URL
		,UNION_URL
		,ONSAIL_TIME
		,CREATE_TIME
		,UPDATE_TIME
		,CATEGORY_NAV
		,TOKEN_BRAND
		,TOKEN_CATEGORY
	</sql>
	<insert id="batchInsert" parameterType="ProductDto">
		INSERT INTO T_PRODUCT(
		<include refid="ProductDto-coloumn-list" />
		)
		VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.siteId},#{item.shopId},#{item.productCode},#{item.productName},#{item.marketPrice},#{item.productUrl},#{item.productBrand},#{item.productModel},#{item.productAttr},#{item.barCode},#{item.imgUrl},#{item.unionUrl},#{item.onsailTime},#{item.createTime},#{item.updateTime},#{item.categoryNav},#{item.tokenBrand},#{item.tokenCategory})
		</foreach>
	</insert>
	<update id="batchUpdate" parameterType="ProductDto">
		UPDATE T_PRODUCT SET
		SHOP_ID=#{shopId},
		PRODUCT_NAME=#{productName},
		MARKET_PRICE=#{marketPrice},
		PRODUCT_URL=#{productUrl},
		PRODUCT_BRAND=#{productBrand},
		PRODUCT_MODEL=#{productModel},
		PRODUCT_ATTR=#{productAttr},
		BAR_CODE=#{barCode},
		IMG_URL=#{imgUrl},
		ONSAIL_TIME=#{onsailTime},
		UPDATE_TIME=#{updateTime},
		CATEGORY_NAV=#{categoryNav},
		TOKEN_BRAND=#{tokenBrand},
		TOKEN_CATEGORY=#{tokenCategory}
		WHERE ID=#{id}
	</update>
	<select id="getProductDtos" parameterType="map" resultMap="RM_ProductDto">
		SELECT ID,
		<include refid="ProductDto-coloumn-list" />
		FROM T_PRODUCT
		WHERE 1=1
		<if test="codeList.isEmpty()">
			AND 1=0
		</if>
		<if test="!codeList.isEmpty()">
			<foreach collection="codeList" item="code" open="AND PRODUCT_CODE IN("
				close=")" separator=",">
				#{code}
			</foreach>
		</if>
		<if test="siteId !=null">
			AND SITE_ID=#{siteId}
		</if>
	</select>
	<select id="getProductDtosFromId" parameterType="map" resultMap="RM_ProductDto">
		SELECT ID,
		<include refid="ProductDto-coloumn-list" />
		FROM T_PRODUCT
		WHERE ID > #{fromId}
		<if test="siteId !=null">
			AND SITE_ID=#{siteId}
		</if>
		LIMIT #{limit}
	</select>

	<update id="batchUpdateUnionUrls" parameterType="ProductDto">
		UPDATE T_PRODUCT SET
		UNION_URL=#{unionUrl}
		WHERE ID=#{id}
	</update>
</mapper>